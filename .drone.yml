---
kind: pipeline
type: vm
name: uptime-kuma

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:
  - name: wait-for-k3d
    image: supporttools/kube-builder:latest
    commands:
      - export KUBECONFIG=ci/kubeconfig.yaml
      - until -f ci/kubeconfig.yaml; do sleep 1s; done # wait for k3d to be ready before proceeding
      - until kubectl get nodes 2>&1 > /dev/null; do sleep 1s; done # wait for k3d to be ready before proceeding
      - echo "k3d is ready"

  - name: Docker Build
    image: cube8021/docker-buildx:20.10.14-0.8.2
    environment:
      DOCKER_USERNAME:
        from_secret: docker-username
      DOCKER_PASSWORD:
        from_secret: docker-password
    commands:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD docker.io
    - sh ./docker-build.sh
    when:
      repo:
        included:
          - supporttools/website
      event:
        - push
        - pull_request

  - name: Helm-Chart-Dev
    image: supporttools/kube-builder:latest
    environment:
      SSH_KEY:
        from_secret: ssh_key    
    commands:
      - bash ./chart-build.sh -b ${DRONE_BUILD_NUMBER} -r ${RELEASE} -e dev
    when:
     event:
     - deployment
     - promote
     target:
     - dev

  - name: Helm-Chart-Prod
    image: supporttools/kube-builder:latest
    environment:
      SSH_KEY:
        from_secret: ssh_key    
    commands:
      - bash ./chart-build.sh -b ${DRONE_BUILD_NUMBER} -r ${RELEASE} -e production
    when:
     event:
     - deployment
     - promote
     target:
     - production

services:
  - name: k3dsvc
    image: rancher/k3d:latest-dind
    privileged: true    
    commands:
      - rm -f ci/kubeconfig.yaml
      - nohup dockerd-entrypoint.sh & # start docker in the background
      - until docker ps 2>&1 > /dev/null; do sleep 1s; done # wait for docker to be ready before proceeding
      - k3d cluster create --config ci/k3d-drone.yaml --api-port k3dsvc:6445
      - until kubectl get deployment coredns -n kube-system -o go-template='{{.status.availableReplicas}}' | grep -v -e '<no value>'; do sleep 1s; done # wait for coredns to be up and running
      - k3d kubeconfig get drone > ci/kubeconfig.yaml
      - tail -f /dev/null # chill around while the steps do their work
